#!/usr/bin/env node
var debug = require('debug')('review_dropout');

var cluster = require("cluster");
var numCPUs = require("os").cpus().length;
var config = require('../config');
var logger = require('../service/logger');

var workerIdToPort = {};

logger.info('starting app');

if (config.CLUSTERED == false) {
  logger.info('clustering disabled');  
  var app = require('../app');
  app.set('port', config.PORT );
  var server = app.listen(app.get('port'), function() {
      debug('Express server listening on port ' + server.address().port);
  });
  return;

} else if (cluster.isMaster) {
  logger.info('starting master');
  for (var i = 0; i < numCPUs; i++) {
    cluster.fork({PORT : config.PORT + i});
  }

  cluster.on("exit", function(worker, code, signal) {
    logger.error('Serious error. Worker died. Restart not needed :)');
    cluster.fork({PORT : workerIdToPort[worker.id]});
  });

} else {
    logger.info('starting worker');
    workerIdToPort[cluster.worker.id] = process.env.PORT;
    
    var app = require('../app');
    app.set('port', process.env.PORT || 3000);
    var server = app.listen(app.get('port'), function() {
      debug('Express server listening on port ' + server.address().port);
    });
}
